# FSRA-VMK: Vision Mamba Kolmogorov Network 配置文件
# 基于您的分析，实现O(n)线性复杂度的跨视角图像匹配模型

# 数据集配置
dataset:
  name: "University-1652"
  data_dir: "./data/University-1652"
  num_classes: 1652
  image_size: 256
  query_modes:
    - "drone_to_satellite"  # 无人机->卫星
    - "satellite_to_drone"  # 卫星->无人机
  
  # 数据增强配置
  augmentation:
    random_flip: true
    random_crop: true
    color_jitter: true
    random_rotation: 10
    normalize:
      mean: [0.485, 0.456, 0.406]
      std: [0.229, 0.224, 0.225]

# 模型配置
model:
  name: "FSRAVMambaKAN"
  
  # 基础参数
  embed_dim: 512          # 特征维度
  depth: 12               # VMamba深度
  num_heads: 8            # 注意力头数
  
  # Vision Mamba 配置
  vmamba:
    d_state: 16           # 状态空间维度
    d_conv: 4             # 卷积核大小
    expand: 2             # MLP扩展比例
    dt_rank: "auto"       # 时间步长rank
    dt_min: 0.001         # 最小时间步长
    dt_max: 0.1           # 最大时间步长
    dt_init: "random"     # 时间步长初始化
    dt_scale: 1.0         # 时间步长缩放
    dt_init_floor: 1e-4   # 时间步长初始化下界
    
  # KAN网络配置
  kan:
    grid_size: 5          # B样条网格大小
    spline_order: 3       # B样条阶数
    grid_range: [-1, 1]   # 网格范围
    kan_layers: [512, 256, 128]  # KAN层维度
    
  # ConvNeXt V2融合模块配置
  convnext_fusion:
    use_grn: true         # 使用Global Response Normalization
    layer_scale_init: 1e-6  # Layer Scale初始化值
    drop_path_rate: 0.1   # DropPath比例
    
  # 跨视角对齐配置
  cross_view_alignment:
    use_bidirectional: true     # 使用双向对齐
    alignment_dim: 256          # 对齐特征维度
    temperature: 0.07           # 对比学习温度
    
  # 分类器配置
  classifier:
    dropout: 0.5          # Dropout比例
    use_bnneck: true      # 使用Batch Normalization Neck

# 训练配置
training:
  # 基础训练参数
  epochs: 300
  batch_size: 32
  num_workers: 4
  
  # 优化器配置
  optimizer:
    name: "AdamW"
    lr: 0.0001            # 基础学习率
    weight_decay: 5e-4    # 权重衰减
    betas: [0.9, 0.999]   # Adam beta参数
    eps: 1e-8             # Adam epsilon参数
    
  # 学习率调度配置
  lr_scheduler:
    name: "WarmupMultiStepLR"
    warmup_epochs: 10     # 预热轮数
    warmup_factor: 0.1    # 预热起始因子
    milestones: [150, 250]  # 学习率衰减里程碑
    gamma: 0.1            # 衰减因子
    
  # 损失函数配置
  losses:
    # ID分类损失
    id_loss:
      weight: 1.0
      label_smoothing: 0.1
      
    # 三元组损失
    triplet_loss:
      weight: 1.0
      margin: 0.3
      distance: "euclidean"
      hard_mining: true
      
    # 对比损失
    contrastive_loss:
      weight: 0.5
      temperature: 0.07
      
    # 中心损失（可选）
    center_loss:
      weight: 0.0005
      num_classes: 1652
      feat_dim: 512
      
  # 正则化配置
  regularization:
    dropout: 0.1
    drop_path: 0.1
    mixup_alpha: 0.2      # Mixup数据增强
    cutmix_alpha: 1.0     # CutMix数据增强
    label_smoothing: 0.1

# 评估配置
evaluation:
  eval_step: 10           # 评估间隔
  metrics:
    - "Recall@1"
    - "Recall@5" 
    - "Recall@10"
    - "mAP"
    - "CMC"
  
  # 距离计算方式
  distance_metric: "euclidean"  # "euclidean" or "cosine"
  
  # 重排序配置
  reranking:
    use_reranking: false
    k1: 20
    k2: 6
    lambda_value: 0.3

# 系统配置
system:
  device: "cuda"
  seed: 42
  deterministic: true
  benchmark: false        # 是否使用cudnn.benchmark
  
  # 保存配置
  save_dir: "./checkpoints"
  log_dir: "./logs"
  save_step: 50           # 保存间隔
  max_checkpoints: 5      # 最大保存检查点数量
  
  # 日志配置
  logging:
    level: "INFO"
    print_freq: 50        # 打印频率
    tensorboard: true     # 使用TensorBoard
    wandb: false          # 使用Weights & Biases

# 推理配置
inference:
  batch_size: 64
  flip_test: false        # 是否使用翻转测试
  multi_scale_test: false # 是否使用多尺度测试
  scales: [1.0]          # 测试尺度

# 数据并行配置（多GPU训练）
distributed:
  use_ddp: false          # 使用分布式数据并行
  world_size: 1           # 进程数
  rank: 0                 # 当前进程rank
  local_rank: 0           # 本地rank
  backend: "nccl"         # 通信后端
  init_method: "env://"   # 初始化方法

# 模型压缩配置（可选）
compression:
  # 知识蒸馏
  knowledge_distillation:
    use_kd: false
    teacher_model: ""
    temperature: 4.0
    alpha: 0.7
    
  # 量化
  quantization:
    use_quantization: false
    bits: 8
    
  # 剪枝
  pruning:
    use_pruning: false
    sparsity: 0.5 